name: 'Ru NPM tests'
description: 'Workflow to execute npm test command with MongoDB container running in the background'

inputs:
  gh-ssh-private-key:  # id of input
    description: 'SSH private key'
    required: true
    default: ''
  gh-ssh-known-hosts:  # id of input
    description: 'SSH known hosts'
    required: true
    default: ''
  npmrc:  # id of input
    description: 'NPMRC'
    required: true
    default: ''


runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '14'
        cache: 'npm'
    - uses: actions/cache@v2
      id: cache-node-modules
      with:
        path: 'node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('package.json') }}

    # Configure credentials
    - name: Create NPMRC
      if: steps.cache-node-modules.outputs.cache-hit != 'true'
      env:
        NPMRC: ${{ inputs.npmrc }}
      run: echo "$NPMRC" > .npmrc
      shell: bash
    - name: Install SSH Key
      if: steps.cache-node-modules.outputs.cache-hit != 'true'
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ inputs.gh-ssh-private-key }} 
        known_hosts: ${{ inputs.gh-ssh-known-hosts }}
    - name: NPM Install
      if: steps.cache-node-modules.outputs.cache-hit != 'true'
      run: npm install
      shell: bash
    - name: Print debug logs
      if: ${{ failure() }}
      run: cat ~/.npm/_logs/*
      shell: bash

    # Git push package-lock.json if someone forgot to push it
    - name: Git user identification
      if: steps.cache-node-modules.outputs.cache-hit != 'true'
      run: git config user.email "ghactions@debitoor.com" && git config user.name "GH Actions"
      shell: bash
    - name: Checkout package.json
      if: steps.cache-node-modules.outputs.cache-hit != 'true'
      run: git checkout package.json
      shell: bash
    - name: Git push
      if: steps.cache-node-modules.outputs.cache-hit != 'true'
      run: var=$(git status | grep package-lock.json | wc -l) && [ ! -z $var ] && git add package-lock.json && git commit -m "update pkg lock" && git push origin $GITHUB_REF_NAME || git status
      shell: bash

    # Run test  
    - name: Test
      run: npm test
      shell: bash

   # Collect results
    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always()
      with:
        files: '**/mocha/*.xml'
