name: 'Run NPM install'
description: 'Workflow to execute npm install script'

inputs:
  npmrc:
    description: 'NPMRC'
    required: true
  gh-ssh-private-key:
    description: 'SSH private key'
    required: false
  gh-ssh-known-hosts:
    description: 'SSH known hosts'
    required: false
  npm-ci-install:
    description: 'Run npm ci instead of npm i'
    required: false
    default: 'false'

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}
        ssh-key: ${{ inputs.gh-ssh-private-key }}
    - id: determine-node-npm-version
      run: |
        NODE_VERSION=$(jq -r '.engines.node' ./package.json)
        echo "::set-output name=node-version::${NODE_VERSION/null/14}"
        NPM_VERSION=$(jq -r '.engines.npm' ./package.json)
        echo "::set-output name=npm-version::${NPM_VERSION/null/}"
        NPM_POSTINSTALL=$(jq -r '.scripts.postinstall' ./package.json)
        echo "::set-output name=npm-postinstall::${NPM_POSTINSTALL/null/}"
      shell: bash
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ steps.determine-node-npm-version.outputs.node-version }}
        # cache: 'npm'
    - uses: actions/cache@v2
      id: cache-node-modules
      with:
        path: |
          node_modules
          !node_modules/**/node_modules
          **/node_modules
          ~/.cache/Cypress
        key: ${{ runner.os }}-modules-${{ hashFiles('package.json') }}
    - name: Update NPM
      if: steps.determine-node-npm-version.outputs.npm-version != ''
      run: npm i npm@${{ steps.determine-node-npm-version.outputs.npm-version }} -g
      shell: bash

    # Configure credentials
    - name: Create NPMRC
      env:
        NPMRC: ${{ inputs.npmrc }}
      run: echo "$NPMRC" > .npmrc
      shell: bash
    - name: Install SSH Key
      if: inputs.gh-ssh-private-key != ''
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ inputs.gh-ssh-private-key }} 
        known_hosts: ${{ inputs.gh-ssh-known-hosts }}
    - name: NPM Install
      if: inputs.npm-ci-install == 'false' && steps.cache-node-modules.outputs.cache-hit != 'true'
      run: npm install
      shell: bash
    - name: NPM CI
      if: inputs.npm-ci-install == 'true' && steps.cache-node-modules.outputs.cache-hit != 'true'
      run: npm ci
      shell: bash
    - name: Print debug logs
      if: ${{ failure() }}
      run: cat ~/.npm/_logs/*
      shell: bash
    - name: NPM postinstall script
      if: steps.determine-node-npm-version.outputs.npm-postinstall != '' && steps.cache-node-modules.outputs.cache-hit == 'true'
      run: npm run postinstall
      shell: bash

    # Update package-lock.json as artifact if someone forgot to push it
    - name: Check if package-lock.json has updates
      id: package-lock-status
      run: echo "::set-output name=package-changed::$(git status | grep package-lock.json | wc -l)" 
      shell: bash

    - name: Configure git username
      if: ${{ steps.package-lock-status.outputs.package-changed == '1' && inputs.gh-ssh-private-key != ''  }}
      run: git config user.email "ghactions@debitoor.com" && git config user.name "GH Actions"
      shell: bash

    - name: Stash package-lock.json
      if: ${{ steps.package-lock-status.outputs.package-changed == '1' && inputs.gh-ssh-private-key != '' }}
      run: git stash -a
      shell: bash

    - name: Checkout branch
      if: ${{ steps.package-lock-status.outputs.package-changed == '1' && inputs.gh-ssh-private-key != '' }}
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        ssh-key: ${{ inputs.gh-ssh-private-key }}

    - name: Pop package-lock.json
      if: ${{ steps.package-lock-status.outputs.package-changed == '1' && inputs.gh-ssh-private-key != ''  }}
      run: git stash pop
      shell: bash

    - name: Add package-lock.json
      if: ${{ steps.package-lock-status.outputs.package-changed == '1' && inputs.gh-ssh-private-key != ''  }}
      run: git add package-lock.json
      shell: bash

    - name: Git commit
      if: ${{ steps.package-lock-status.outputs.package-changed == '1' && inputs.gh-ssh-private-key != ''  }}
      run: git commit -m "Updated package-lock.json"
      shell: bash

    - name: Git push
      if: ${{ steps.package-lock-status.outputs.package-changed == '1' && inputs.gh-ssh-private-key != ''  }}
      run: git push origin HEAD:$GITHUB_HEAD_REF
      shell: bash

    # - if: ${{ steps.package-lock-status.outputs.package-changed == '1' }}
    #   uses: stefanzweifel/git-auto-commit-action@v4
    #   with:
    #     commit_message: Updated package-lock.json
    #     file_pattern: "package-lock.json"
    #     disable_globbing: true
